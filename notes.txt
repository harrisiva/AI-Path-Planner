
    // hand pick nodes to the goal and test if you get the right state
    // 9 moves total (8 nodes in the explored state + 1 for the goal)
    // expand(&initial);
    // Node node1 = initial.children[1]; // left=1
    // node1.print();

    // expand(&node1);
    // Node node2 = node1.children[0];
    // node2.print();
    
    // expand(&node2);
    // Node node3 = node2.children[0];
    // node3.print();

    // expand(&node3);
    // Node node4 = node3.children[0];
    // node4.print();

    // expand(&node4);
    // Node node5 = node4.children[0];
    // node5.print();

    // expand(&node5);
    // Node node6 = node5.children[2];
    // node6.print();

    // expand(&node6);
    // Node node7 = node6.children[0];
    // node7.print();

    // expand(&node7);
    // Node node8 = node7.children[0];
    // node8.print();

    // cout << "Size: " <<  node8.children.size() << endl;
    // expand(&node8);
    // cout << "Size: " <<  node8.children.size() << endl;
    // Node node9 = node8.children[2];
    // node9.print();

    // expand(&node9);
    // Node node10 = node9.children[2];
    // node10.print();
    // cout << node10.equals(goal) << endl;



The state that breaks expand:
1000R00001
1100000011
0000000000
1000110001
1001111001
00B1111000
0000110000
11B0000011